{"majorversion": 3, "classmap": {"Xmla.Rowset": {"name": "Xmla.Rowset", "constructors": [{"params": [{"type": "DOMDocument", "name": "node", "description": " The responseXML result returned by server in response to a <code>Discover</code> request."}, {"type": "string", "name": "requestTtype", "description": " The requestType identifying the particular schema rowset to construct. This facilitates implementing field getters for a few complex types."}], "description": "<p>\nThis class implements an XML/A Rowset object.\n</p>\n<p>\nYou do not need to instantiate objects of this class yourself. \nRather, the <code><a href=\"Xmla.html#class_Xmla\">Xmla</a></code> class will instantiate this class to convey the result of any of the various <code>discoverXXX()</code> methods\n(see <code><a href=\"Xmla.html#method_discover\">discover()</a></code>).\nIn addition, this class is also used to instantiate a Resultset for the \n<code><a name=\"Xmla.html#method_execute\">execute()</code> method in case the \n<code>Format</code> property is set to <code>Tabular</code>\n(see <code><a name=\"Xmla.html#property_OPTION_FORMAT\">OPTION_FORMAT</a></code> and <code><a name=\"Xmla.html#property_OPTION_FORMAT_TABULAR\">OPTION_FORMAT_TABULAR</a></code>).\nThe <code><a href=\"Xmla.html#method_request\">request()</a></code> method itself will also return an instance of this class in case the <code>method</code> is used to do a \n<code>Discover</code> request, or in case it is used to do a <code>Execute</code> request and the <code>Format</code> property is set to <code>Tabular</code>.\n</p>\n<p>\nAn instance of the <code>Xmla.Rowset</code> class is returned immediately as return value from the <code>disoverXXX()</code> or <code>execute()</code> method when doing a synchronous request. \nIn addition, the rowset is available in the eventdata passed to any registered listeners\n(see <code><a href=\"Xmla.html#method_addListener\">addListener()</a></code>).\nNote that for asynchronous requests, the only way to obtain the returned <code>Rowset</code> instance is through the listeners. \n</p>"}], "namespace": "", "module": "xmla", "guessedname": "Rowset", "methods": {"fieldCount": {"return": {"type": "int", "description": "The number of fields in this rowset."}, "description": "Returns the number of fields in this rowset.", "guessedname": "fieldCount", "guessedtype": "function"}, "fetchAsArray": {"return": {"type": "array", "description": ""}, "description": "Fetch all values from all fields from the current row, and return it in an array.\nThe position of the values in the array corresponds to the column order of the rowset.\nThe internal row pointer is also increased so the next call will read the next row.\nThe method returns false when there are no more rows to traverse. \nYou can use this method to drive a loop to travere all rows in the Rowset: \n<pre>\nwhile (rowArray = rowset.fetchAsArray()){\n&nbsp;   ...process array...\n}\n</pre>", "guessedname": "fetchAsArray", "guessedtype": "function"}, "fieldDef": {"return": {"type": "fieldDef", "description": "The <code>fieldDef</code> object that matches the argument."}, "params": [{"type": "string", "name": "name", "description": " The name of the field to retrieve."}], "description": "Retrieves a <code>fieldDef</code> object by name.\nA fieldDef describes a field (column). It has the following properties:\n<dl>\n<dt>label</dt><dd>string. This is the human readable name for this field. You should use this name for display purposes and for building restrictions. This is also the name used for matching againstt the <code>name</code> argument passed to the <code>fieldDef()</code> method.</dd>\n<dt>name</dt><dd>string. This is the (possibly escaped) name of the field as it appears in the XML document</dd>\n<dt>index</dt><dd>int. The ordinal position of this field. Fields are numbered starting from 0.</dd>\n<dt>type</dt><dd>string. The name of the XML data type for the values that appear in this column</dd>\n<dt>minOccurs</dt><dd>string. The minimal number of occurrences of a value. \"0\" means the field is optional.</dd>\n<dt>maxOccurs</dt><dd>string. If this is parseable as an integer, that integer specifies the number of times a value can appear in this column. \"unbounded\" means there is no declared limit.</dd>\n<dt>getter</dt><dd>function. This function is used to extract a value from the XML document for this field.</dd>\n</dl>", "guessedname": "fieldDef", "guessedtype": "function"}, "getType": {"return": {"type": "", "description": ""}, "description": "Indicates the type of rowset. In most cases, this will be identical to the <code>requestType</code> value that was used in the \n<code>Discover</code> request", "guessedname": "getType", "guessedtype": "function"}, "getFieldNamess": {"return": {"type": "", "description": ""}, "description": "Retrieve an array of field names.\nThe position of the names in the array corresponds to the column order of the rowset.", "guessedname": "getFieldNames", "guessedtype": "function"}, "next": {"description": "Moves the internal row index to the next row.\nYou can use this method together with the \n<code><a href=\"#method_next\">hasMoreRows()</a></code> method\nto drive a <code>while</code> loop to traverse all rows in the rowset.", "guessedname": "next", "guessedtype": "function"}, "fieldIndex": {"return": {"type": "int", "description": "The ordinal position (starting at 0) of the field that matches the argument."}, "params": [{"type": "string", "name": "name", "description": " The name of the field for which you want to retrieve the index."}], "description": "Retrieves the index of a field by name.\nField indexes start at 0.", "guessedname": "fieldIndex", "guessedtype": "function"}, "fetchAllAsArray": {"return": {"type": "", "description": "array[]"}, "description": "Fetch all values from all fields from all rows, and return it as an array of arrays.\nSee <code><a href=\"#method_fetchAsArray\">fetchAsArray()</a></code>.", "guessedname": "fetchAllAsArray", "guessedtype": "function"}, "fieldName": {"return": {"type": "int", "description": "The ordinal position (starting at 0) of the field that matches the argument."}, "params": [{"type": "string", "name": "name", "description": " The name of the field for which you want to retrieve the index."}], "description": "Retrieves the name of a field by field Index.\nField indexes start at 0.", "guessedname": "fieldName", "guessedtype": "function"}, "close": {"description": "Releases references to the DomDocument passed to the Rowset constructor.\nThis should facilitate automatic garbage collection by the browser.", "guessedname": "close", "guessedtype": "function"}, "fetchAsObject": {"return": {"type": "Object|boolean", "description": ""}, "description": "Fetch all values from all fields from the current row, and return it in an Object literal.\nThe property names of the returned object correspond to the fieldName (actually the fieldLabel), and the field value is assigned to its respective property.\nThe internal row pointer is also increased so the next call will read the next row.\nThe method returns false when there are no more rows to traverse. \nYou can use this method to drive a loop to travere all rows in the Rowset: \n<pre>\nwhile (rowObject = rowset.fetchAsObject()){\n&nbsp;   ...process object...\n}\n</pre>", "guessedname": "fetchAsObject", "guessedtype": "function"}, "fieldVal": {"return": {"type": "array|boolean|float|int|string", "description": "From the current row, the value of the field that matches the argument."}, "params": [{"type": "string", "name": "name", "description": " The name of the field for which you want to retrieve the value."}], "description": "Retrieves a value from the current row for the field having the name specified by the argument.", "guessedname": "fieldVal", "guessedtype": "function"}, "getFields": {"return": {"type": "", "description": ""}, "description": "Retrieve an array of <code>fieldDef</code> objects that describes the fields of the rows in this rowset.\nThe position of the <code>fieldDef</code> objects in the array corresponds to the column order of the rowset.\nFor a description of the <code>fieldDef</code> object, see the \n<code><a href=\"#method_fieldDef\">fieldDef()</a></code> method.", "guessedname": "getFields", "guessedtype": "function"}, "hasMoreRows": {"return": {"type": "bool", "description": "true in case there are more rows to traverse. false if all rows have been traversed."}, "description": "Indicates wheter the rowset that can be traversed.\nYou can use this method together with the \n<code><a href=\"#method_next\">next()</a></code> method\nto drive a <code>while</code> loop to traverse all rows in the rowset, like so:\n<pre>\n&nbsp;while(rowset.hasMoreRows()){\n&nbsp;    ...process row...\n&nbsp;    rowsete.next();\n&nbsp;}\n</pre>", "guessedname": "hasMoreRows", "guessedtype": "function"}, "fetchAllAsObject": {"return": {"type": "", "description": "array[]"}, "description": "Fetch all values from all fields from all rows, and return it as an array of objects.\nSee <code><a href=\"#method_fetchAsObject\">fetchAsObject()</a></code>.", "guessedname": "fetchAllAsObject", "guessedtype": "function"}}, "file": "Xmla.js", "guessedtype": "function", "shortname": "Xmla.Rowset", "properties": {"MD_DIMTYPE_CHANNEL": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>13</code>", "static": "", "guessedname": "MD_DIMTYPE_CHANNEL", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_OTHER": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>3</code>", "static": "", "guessedname": "MD_DIMTYPE_OTHER", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_UNKNOWN": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>0</code>", "static": "", "guessedname": "MD_DIMTYPE_UNKNOWN", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_PRODUCTS": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>8</code>", "static": "", "guessedname": "MD_DIMTYPE_PRODUCTS", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_MEASURE": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>2</code>", "static": "", "guessedname": "MD_DIMTYPE_MEASURE", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_UTILIY": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>10</code>", "static": "", "guessedname": "MD_DIMTYPE_UTILIY", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_ORGANIZATION": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>15</code>", "static": "", "guessedname": "MD_DIMTYPE_ORGANIZATION", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_TIME": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>1</code>", "static": "", "guessedname": "MD_DIMTYPE_TIME", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_RATES": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>12</code>", "static": "", "guessedname": "MD_DIMTYPE_RATES", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_CUSTOMERS": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>7</code>", "static": "", "guessedname": "MD_DIMTYPE_CUSTOMERS", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_GEOGRAPHY": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>17</code>", "static": "", "guessedname": "MD_DIMTYPE_GEOGRAPHY", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_QUANTITATIVE": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>5</code>", "static": "", "guessedname": "MD_DIMTYPE_QUANTITATIVE", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_PROMOTION": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>14</code>", "static": "", "guessedname": "MD_DIMTYPE_PROMOTION", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_BILL_OF_MATERIALS": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>16</code>", "static": "", "guessedname": "MD_DIMTYPE_BILL_OF_MATERIALS", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_ACCOUNTS": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>6</code>", "static": "", "guessedname": "MD_DIMTYPE_ACCOUNTS", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_SCENARIO": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>9</code>", "static": "", "guessedname": "MD_DIMTYPE_SCENARIO", "guessedtype": "property", "type": "int", "final": ""}, "MD_DIMTYPE_CURRENCY": {"description": "A possible value for the <code>DIMENSION_TYPE</code> column that appears in the \n<code>MDSCHEMA_DIMENSIONS</code> (See: <code><a href=\"#method_discoverMDDimensions\">discoverMDDimensions()</a></code>) and \n<code>MDSCHEMA_HIERARCHIES</code> (See: <code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code>)rowsets.", "default": "<code>11</code>", "static": "", "guessedname": "MD_DIMTYPE_CURRENCY", "guessedtype": "property", "type": "int", "final": ""}}, "description": "<p>\nThis class implements an XML/A Rowset object.\n</p>\n<p>\nYou do not need to instantiate objects of this class yourself. \nRather, the <code><a href=\"Xmla.html#class_Xmla\">Xmla</a></code> class will instantiate this class to convey the result of any of the various <code>discoverXXX()</code> methods\n(see <code><a href=\"Xmla.html#method_discover\">discover()</a></code>).\nIn addition, this class is also used to instantiate a Resultset for the \n<code><a name=\"Xmla.html#method_execute\">execute()</code> method in case the \n<code>Format</code> property is set to <code>Tabular</code>\n(see <code><a name=\"Xmla.html#property_OPTION_FORMAT\">OPTION_FORMAT</a></code> and <code><a name=\"Xmla.html#property_OPTION_FORMAT_TABULAR\">OPTION_FORMAT_TABULAR</a></code>).\nThe <code><a href=\"Xmla.html#method_request\">request()</a></code> method itself will also return an instance of this class in case the <code>method</code> is used to do a \n<code>Discover</code> request, or in case it is used to do a <code>Execute</code> request and the <code>Format</code> property is set to <code>Tabular</code>.\n</p>\n<p>\nAn instance of the <code>Xmla.Rowset</code> class is returned immediately as return value from the <code>disoverXXX()</code> or <code>execute()</code> method when doing a synchronous request. \nIn addition, the rowset is available in the eventdata passed to any registered listeners\n(see <code><a href=\"Xmla.html#method_addListener\">addListener()</a></code>).\nNote that for asynchronous requests, the only way to obtain the returned <code>Rowset</code> instance is through the listeners. \n</p>"}, "Xmla": {"name": "Xmla", "constructors": [{"params": [{"type": "Object", "name": "options", "description": ""}], "description": "<p>\nThe Xmla class provides a javascript API to communicate XML for Analysis (XML/A) over HTTP.\nXML/A is an industry standard protocol that allows webclients to work with OLAP servers.\nTo fully understand the scope and purpose of this utility, it is highly recommended\nto read <a href=\"http://xmla.org/xmla1.1.doc\">the XML/A specification</a> \n(MS Word format. For other formats, \nsee: <a href=\"http://code.google.com/p/xmla4js/source/browse/#svn/trunk/doc/xmla1.1 specification\">http://code.google.com/p/xmla4js/source/browse/#svn/trunk/doc/xmla1.1 specification</a>). \n</p>"}], "namespace": "", "module": "xmla", "guessedname": "Xmla", "methods": {"discoverKeywords": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DISCOVER_ENUMERATORS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DISCOVER_KEYWORDS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using <code><a href=\"#property_DISCOVER_KEYWORDS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DISCOVER_KEYWORDS</code> schema rowset. \nThis rowset is a list of reserved words for this XML/A provider.\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>Keyword</td>\n<td>string</td>\n<td>Name of the enumerator. </td>\n<td>Yes (array)</td>\n<td>No</td>\n</tr>\n</table>", "guessedname": "discoverKeywords", "guessedtype": "function"}, "addListener": {"params": [{"type": "Object", "name": "listener", "description": " An object that defines the events and the notification function to be called."}], "description": "This method can be used to register a listener to one or more events.\nThe <code>listener</code> argument should have the following structure: <pre>{\nevents: [...event names...],\nhandler: function(eventName, eventData, xmla) {...code to run upon notification...},\nscope: object\n}</pre>\n<dl>\n<dt><code>events</code></dt>\n<dd><code>string</code>|<code>string[]</code> REQUIRED. \nThe event or events to listen to. \nYou can specify a single event by using one of the <code>EVENT_XXX</code> string constant values.\nYou can specify multiple events by using an array of <code>EVENT_XXX</code> string constant values.\nYou can also use one of the predefined <code>EVENT_XXX</code> array constant values, \nor use array concatenation and compose a custom list of event names.\nTo listen to all events, either use <code><a href=\"#property_EVENT_ALL\">EVENT_ALL</a></code>, \nor otherwise the <code>string</code> value <code>\"all\"</code>.\n</dd>\n<dt><code>boolean handler(eventName, eventData, xmla)</code></dt>\n<dd><code>function</code> REQUIRED. This function will be called and notified whenever one of the specified events occurs.\nThe function is called in scope of the <code>scope</code> property of the listener object. \nIf no <code>scope</code> is specified, a global function (having brower built-in <code>window</code> scope) is assumed.\nThe <code>handler</code> function has the following arguments:\n<dl>\n<dt><code>eventName</code></dt>\n<dd><code>string</code> The event for which notification is given. \nThis is useful to distinguish between events in case the same handler function is used for multiple events.\nIn this case, use the <code>EVENT_XXX</code> constants to check the <code>eventName</code>.</dd>\n<dt><code>eventData</code></dt>\n<dd><code>Object</code> An object that conveys event-specific data.</dd>\n<dt><code>xmla</code></dt>\n<dd><code><a href=\"class_Xmla\">Xmla</a></code> A reference to this <code>Xmla</code> instance that is the source of the event. \nListeners can obtain the response as well as the original SOAP message sent to the server through this instance.\nThis allows one listener to be shared across multiple <code>Xmla</code> instances without managing the context manually. \n</dd>\n</dl>\nFor events that are <em>cancelable</em>, the handler should return a <code>boolean</code>.\nIf the handler returns <code>false</code> the respective operation will be canceled.\nOtherwise, the operation continues (but may be canceled by another handler).\nCurrently, the following events are cancelable: \n<code><a href=\"#property_EVENT_DISCOVER\">EVENT_DISCOVER</a></code>,\n<code><a href=\"#property_EVENT_EXECUTE\">EVENT_EXECUTE</a></code>, and\n<code><a href=\"#property_EVENT_REQUEST\">EVENT_REQUEST</a></code>. \n</dd>\n<dt><code>scope</code></dt>\n<dd><code>Object</code> OPTIONAL When specified, this object is used as the <code>this</code> object when calling the handler.\nWhen not specified, the global <code>window</code> is used.\n</dd>\n</dl>", "guessedname": "addListener", "guessedtype": "function"}, "discoverMDActions": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_ACTIONS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_ACTIONS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_ACTIONS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_ACTIONS</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverMDActions", "guessedtype": "function"}, "discoverProperties": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DISCOVER_DATASOURCES</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DISCOVER_DATASOURCES</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using <code><a href=\"#property_DISCOVER_PROPERTIES\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DISCOVER_PROPERTIES</code> schema rowset. \nThis rowset provides information on the properties that are supported by the XML/A provider.\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>\nPropertyName\n</td>\n<td>\nstring\n</td>\n<td>\nThe name of the property\n</td>\n<td>\nYes (array)\n</td>\n<td>\nNo\n</td>\n</tr>\n<tr>\n<td>\nPropertyDescription\n</td>\n<td>\nstring\n</td>\n<td>\nHuman readable description of the property\n</td>\n<td>\nNo\n</td>\n<td>\nYes\n</td>\n</tr>\n<tr>\n<td>\nPropertyType\n</td>\n<td>\nstring\n</td>\n<td>\nThe property's datatype (as an XML Schema data type)\n</td>\n<td>\nNo\n</td>\n<td>\nYes\n</td>\n</tr>\n<tr>\n<td>\nPropertyAccessType\n</td>\n<td>\nstring\n</td>\n<td>\nHow the property may be accessed. Values defined by the XML/A spec are:\n<ul>\n<li>Read</li>\n<li>Write</li>\n<li>ReadWrite</li>\n</ul>\n</td>\n<td>\nNo\n</td>\n<td>\nNo\n</td>\n</tr>\n<tr>\n<td>\nIsRequired\n</td>\n<td>\nboolean\n</td>\n<td>\n<code>true</code> if the property is required, <code>false</code> if not.\n</td>\n<td>\nNo\n</td>\n<td>\nYes\n</td>\n</tr>\n<tr>\n<td>\nValue\n</td>\n<td>\nstring\n</td>\n<td>\nThe property's current value.\n</td>\n<td>\nNo\n</td>\n<td>\nYes\n</td>\n</tr>\n</table>", "guessedname": "discoverProperties", "guessedtype": "function"}, "discoverDBColumns": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DBSCHEMA_COLUMNS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DBSCHEMA_COLUMNS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_DBSCHEMA_COLUMNS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DBSCHEMA_COLUMNS</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverDBColumns", "guessedtype": "function"}, "discoverDBCatalogs": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DBSCHEMA_CATALOGS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DBSCHEMA_CATALOGS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_DBSCHEMA_CATALOGS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DBSCHEMA_CATALOGS</code> schema rowset. \nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>CATALOG_NAME</td>\n<td>string</td>\n<td>Name of the catalog</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DESCRIPTION</td>\n<td>string</td>\n<td>Human readable description</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>ROLES</td>\n<td>string</td>\n<td>A comma-separatd list of roles available to the current user.</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DATE_MODIFIED</td>\n<td>Date</td>\n<td>The date this catalog was modified</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n</table>", "guessedname": "discoverDBCatalogs", "guessedtype": "function"}, "discoverMDMeasures": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_MEASURES</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_MEASURES</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_MEASURES\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_MEASURES</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>CATALOG_NAME</td>\n<td>string</td>\n<td>Name of the catalog</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>SCHEMA_NAME</td>\n<td>string</td>\n<td>Not supported</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>CUBE_NAME</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASURE_NAME</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASURE_UNIQUE_NAME</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASURE_CAPTION</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASURE_GUID</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASURE_AGGREGATOR</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DATA_TYPE</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>NUMERIC_PRECISION</td>\n<td>int</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>NUMERIC_SCALE</td>\n<td>int</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DESCRIPTION</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>EXPRESSION</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASURE_IS_VISIBLE</td>\n<td>boolean</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>LEVELS_LIST</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASURE_NAME_SQL_COLUMN_NAME</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASURE_UNQUALIFIED_CAPTION</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASUREGROUP_NAME</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>MEASURE_DISPLAY_FOLDER</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DEFAULT_FORMAT_STRING</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n</table>", "guessedname": "discoverMDMeasures", "guessedtype": "function"}, "discoverDBTables": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DBSCHEMA_TABLES</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DBSCHEMA_TABLES</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_DBSCHEMA_TABLES\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DBSCHEMA_TABLES</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverDBTables", "guessedtype": "function"}, "discoverLiterals": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DISCOVER_LITERALS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DISCOVER_LITERALS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using <code><a href=\"#property_DISCOVER_LITERALS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DISCOVER_LITERALS</code> schema rowset. \nThis rowset is a list of reserved words for this XML/A provider.\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>LiteralName</td>\n<td>string</td>\n<td>Name of the literal. </td>\n<td>Yes (array)</td>\n<td>No</td>\n</tr>\n<tr>\n<td>LiteralValue</td>\n<td>string</td>\n<td>The actual literal value. </td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>LiteralInvalidChars</td>\n<td>string</td>\n<td>Characters that may not appear in the literal </td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>LiteralInvalidStartingChars</td>\n<td>string</td>\n<td>Characters that may not appear as first character in the literal </td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>LiteralMaxLength</td>\n<td>int</td>\n<td>maximum number of characters for this literal, or -1 in case there is no maximum, or the maximum is unknown</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n</table>", "guessedname": "discoverLiterals", "guessedtype": "function"}, "discoverMDCubes": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_CUBES</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_CUBES</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_CUBES\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_CUBES</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>CATALOG_NAME</td>\n<td>string</td>\n<td>Name of the catalog</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>SCHEMA_NAME</td>\n<td>string</td>\n<td>Not supported</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>CUBE_NAME</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>CUBE_TYPE</td>\n<td>string</td>\n<td>Type of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>CUBE_GUID</td>\n<td>string</td>\n<td>Not supported</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>CREATED_ON</td>\n<td>Date</td>\n<td>Not supported</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>LAST_SCHEMA_UPDATE</td>\n<td>Date</td>\n<td>The time that the cube was last processed.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>SCHEMA_UPDATED_BY</td>\n<td>string</td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>LAST_DATA_UPDATE</td>\n<td>Date</td>\n<td>The time that the cube was last processed.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DATA_UPDATED_BY</td>\n<td>string</td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DESCRIPTION</td>\n<td>string</td>\n<td>A Human-readable description of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>IS_DRILLTHROUGH_ENABLED</td>\n<td>boolean</td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>IS_LINKABLE</td>\n<td>boolean</td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>IS_WRITE_ENABLED</td>\n<td>boolean</td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>IS_SQL_ENABLED</td>\n<td>boolean</td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>CUBE_CAPTION</td>\n<td>string</td>\n<td>Caption for this cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>BASE_CUBE_NAME</td>\n<td>string</td>\n<td>Name of the source cube (if this cube is a perspective cube).</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>ANNOTATIONS</td>\n<td>string</td>\n<td>Notes in xml format</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n</table>", "guessedname": "discoverMDCubes", "guessedtype": "function"}, "discoverDataSources": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DISCOVER_DATASOURCES</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DISCOVER_DATASOURCES</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using <code><a href=\"#property_DISCOVER_DATASOURCES\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DISCOVER_DATASOURCES</code> schema rowset. \nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>\nDataSourceName\n</td>\n<td>\nstring\n</td>\n<td>\nA name that identifies this data source.\n</td>\n<td>\nYes\n</td>\n<td>\nNo\n</td>\n</tr>\n<tr>\n<td>\nDataSourceDescription\n</td>\n<td>\nstring\n</td>\n<td>\nHuman readable description of the datasource \n</td>\n<td>\nNo\n</td>\n<td>\nYes\n</td>\n</tr>\n<tr>\n<td>\nURL\n</td>\n<td>\nstring\n</td>\n<td>\nURL to use to submit requests to this provider.\n</td>\n<td>\nYes\n</td>\n<td>\nYes\n</td>\n</tr>\n<tr>\n<td>\nDataSourceInfo\n</td>\n<td>\nstring\n</td>\n<td>\nConnectstring\n</td>\n<td>\nNo\n</td>\n<td>\nYes\n</td>\n</tr>\n<tr>\n<td>\nProviderName\n</td>\n<td>\nstring\n</td>\n<td>\nA name indicating the product providing the XML/A implementation\n</td>\n<td>\nYes\n</td>\n<td>\nYes\n</td>\n</tr>\n<tr>\n<td>\nProviderType\n</td>\n<td>\nstring[]\n</td>\n<td>\nThe kind of data sets supported by this provider. \nThe following values are defined by the XML/A specification:\n<dl>\n<dt>TDP</dt><dd>tabular data provider.</dd>\n<dt>MDP</dt><dd>multidimensiona data provider.</dd>\n<dt>DMP</dt><dd>data mining provider.</dd>\n</dl>\nNote: multiple values are possible.\n</td>\n<td>\nYes\n</td>\n<td>\nNo\n</td>\n</tr>\n<tr>\n<td>\nAuthenticationMode\n</td>\n<td>\nstring\n</td>\n<td>\nType of security offered by the provider\nThe following values are defined by the XML/A specification:\n<dl>\n<dt>Unauthenticated</dt><dd>no user ID or password needs to be sent.</dd>\n<dt>Authenticated</dt><dd>User ID and password must be included in the information required for the connection.</dd>\n<dt>Integrated</dt><dd> the data source uses the underlying security to determine authorization</dd>\n</dl>\n</td>\n<td>\nYes\n</td>\n<td>\nNo\n</td>\n</tr>\n</table>", "guessedname": "discoverDataSources", "guessedtype": "function"}, "discoverMDFunctions": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_FUNCTIONS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_FUNCTIONS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_FUNCTIONS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_FUNCTIONS</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverMDFunctions", "guessedtype": "function"}, "discoverMDMembers": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_MEMBERS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_MEMBERS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_MEMBERS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_MEMBERS</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverMDMembers", "guessedtype": "function"}, "discover": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the requested schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A <code>Discover</code> request."}], "description": "Sends a request to invoke the XML/A <code>Discover</code> method and returns a schema rowset specified by the <code>requestType</code> option.\nOptions are passed using a generic <code>options</code> object.\nApplicable properties of the <code>options</code> object are:\n<ul>\n<li><code>requestType</code> - {string} Indicates the kind of schema rowset to retrieve.\nYou can use one of the following predefined XML for Analysis Schema Rowset constants:\n<ul>\n<li><code><a href=\"#property_DISCOVER_DATASOURCES\">DISCOVER_DATASOURCES</a></code></li>\n<li><code><a href=\"#property_DISCOVER_ENUMERATORS\">DISCOVER_ENUMERATORS</a></code></li>\n<li><code><a href=\"#property_DISCOVER_KEYWORDS\">DISCOVER_KEYWORDS</a></code></li>\n<li><code><a href=\"#property_DISCOVER_LITERALS\">DISCOVER_LITERALS</a></code></li>\n<li><code><a href=\"#property_DISCOVER_PROPERTIES\">DISCOVER_PROPERTIES</a></code></li>\n<li><code><a href=\"#property_DISCOVER_SCHEMA_ROWSETS\">DISCOVER_SCHEMA_ROWSETS</a></code></li>\n</ul>\nOr one of the applicable OLE DB Schema Rowset constants: \n<ul>\n<li><code><a href=\"#property_DBSCHEMA_CATALOGS\">DBSCHEMA_CATALOGS</a></code></li>\n<li><code><a href=\"#property_DBSCHEMA_COLUMNS\">DBSCHEMA_COLUMNS</a></code></li>\n<li><code><a href=\"#property_DBSCHEMA_PROVIDER_TYPES\">DBSCHEMA_PROVIDER_TYPES</a></code></li>\n<li><code><a href=\"#property_DBSCHEMA_SCHEMATA\">DBSCHEMA_SCHEMATA</a></code></li>\n<li><code><a href=\"#property_DBSCHEMA_TABLES\">DBSCHEMA_TABLES</a></code></li>\n<li><code><a href=\"#property_DBSCHEMA_TABLES_INFO\">DBSCHEMA_TABLES_INFO</a></code></li>\n</ul>\nOr one of the applicable OLE DB for OLAP Schema Rowset constants: \n<ul>\n<li><code><a href=\"#property_MDSCHEMA_ACTIONS\">MDSCHEMA_ACTIONS</a></code></li>\n<li><code><a href=\"#property_MDSCHEMA_CUBES\">MDSCHEMA_CUBES</a></code></li>\n<li><code><a href=\"#property_MDSCHEMA_DIMENSIONS\">MDSCHEMA_DIMENSIONS</a></code></li>\n<li><code><a href=\"#property_MDSCHEMA_FUNCTIONS\">MDSCHEMA_FUNCTIONS</a></code></li>\n<li><code><a href=\"#property_MDSCHEMA_HIERARCHIES\">MDSCHEMA_HIERARCHIES</a></code></li>\n<li><code><a href=\"#property_MDSCHEMA_MEASURES\">MDSCHEMA_MEASURES</a></code></li>\n<li><code><a href=\"#property_MDSCHEMA_MEMBERS\">MDSCHEMA_MEMBERS</a></code></li>\n<li><code><a href=\"#property_MDSCHEMA_PROPERTIES\">MDSCHEMA_PROPERTIES</a></code></li>\n<li><code><a href=\"#property_MDSCHEMA_SETS\">MDSCHEMA_SETS</a></code></li>\n</ul>\nYou can also dymically discover which values for <code>requestType</code> are supported by the XML/A provider.\nTo do that, refer to the <code>SchemaName</code> column of the <code>DISCOVER_SCHEMA_ROWSETS</code> rowset\n(see: <code><a href=\"method_discoverMDSchemaRowsets\">discoverMDSchemaRowsets()</a></code>).\n</li>\n<li><code>url</code> {string} REQUIRED the url of the XML/A service or XML/A datasource.        \nIf the value for the <code>requestType</code> option is one of the predefined XML/A <code><a href=\"\">DISCOVER_XXX</a></code> constants, \nthen this should be the url of the XML/A service.\n</li>\n<li>\n<code>properties</code> {Object} XML/A properties. \nThe appropriate types and values of XML/A properties are dependent upon the value passed as <code>requestType</code>.\nThe XML/A standard defines a set of pre-defined properties. \nThe <code>Xmla</code> class defines a static final property for each of these (see the <code>PROP_XXX</code> constants).\nThe list of all valid properties can be obtained from the <code>DISCOVER_PROPERTIES</code> schema rowset \n(see <code><a href=\"#method_discoverProperties()\">discoverProperties()</a></code>). \nEach javascript property of the <code>properties</code> object is mapped literally to a XML/A property.\n</li>\n<li>\n<code>restrictions</code> {Object} XML/A restrictions.\nThese are used to specify a filter that will be applied to the data in the schema rowset.\nEach javascript property of the <code>restrictions</code> object is mapped to a column of the requested schema rowset.\nThe value for the restriction is sent with the request, and processed by the XML/A server to only return matching rows from the requested schema dataset.\nThe name, types and values of the restrictions are dependent upon which schema rowset is requested.\nThe available restrictions are specified by the <code>Restrictions</code> column of the <code>DISCOVER_SCHEMA_ROWSETS</code> schema rowset.\nFor a number of schema rowsets, the available restrictions are pre-defined. \nThese are documented together with each particular <code>discoverXXX()</code> method.\n</li>\n<li><code>async</code> {boolean} \nDetermines how the request is performed:<ul>\n<li><code>true</code>: The request is performed asynchronously: the call to <code>request()</code> will not block and return immediately.\nIn this case, the return value of the <code>request()</code> method is not defined, \nand the response must be received by registering a listener \n(see <code><a href=\"#method_addListener\">addListener()</a></code>).\n</li>\n<li><code>false</code>: The request is performed synchronously: the call to <code>execute()</code> will block until it receives a response from the XML/A server or times out.\nIn this case, a <code>Resultset</code> is returned that represents the multi-dimensional data set.\nIf you registered any <code>REQUEST_XXX</code> and/or <code>EXECUTE_XXX</code> listeners (see <code><a href=\"#method_addListener\">addListener()</a></code>), \nthen these will still be notified.\n</li>\n</ul>\n</li>\n</ul>\nInstead of calling this method directly, consider calling \nor one of the specialized <code>discoverXXX()</code> methods to obtain a particular schema rowset.", "guessedname": "discover", "guessedtype": "function"}, "discoverEnumerators": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DISCOVER_ENUMERATORS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DISCOVER_ENUMERATORS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using <code><a href=\"#property_DISCOVER_ENUMERATORS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DISCOVER_ENUMERATORS</code> schema rowset. \nThis rowset lists the names, data types, and enumeration values of enumerators supported by the XMLA Provider for a specific data source.\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>EnumName</td>\n<td>string</td>\n<td>Name of the enumerator. </td>\n<td>Yes (array)</td>\n<td>No</td>\n</tr>\n<tr>\n<td>EnumDescription</td>\n<td>string</td>\n<td>A human readable description of the enumerator</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>EnumType</td>\n<td>string</td>\n<td>The XML Schema data type of this enumerator</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td>ElementName</td>\n<td>string</td>\n<td>The name of the enumerator entry</td>\n<td>No</td>\n<td>No</td>\n</tr>\n<tr>\n<td>ElementDescription</td>\n<td>string</td>\n<td>A human readable description of this enumerator entry</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>ElementValue</td>\n<td>string</td>\n<td>The value of this enumerator entry</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n</table>", "guessedname": "discoverEnumerators", "guessedtype": "function"}, "discoverMDHierarchies": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_HIERARCHIES</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_HIERARCHIES</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_HIERARCHIES\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_HIERARCHIES</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>CATALOG_NAME</td>\n<td>string</td>\n<td>Name of the catalog</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>SCHEMA_NAME</td>\n<td>string</td>\n<td>Not supported</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>CUBE_NAME</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DIMENSION_UNIQE_NAME</td>\n<td>string</td>\n<td>Unique name for this dimension.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>HIERARCHY_NAME</td>\n<td>string</td>\n<td>Name of the hierarchy.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>HIERARCHY_UNIQE_NAME</td>\n<td>string</td>\n<td>Unique name for this hierarchy.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>HIERARCHY_GUID</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>HIERARCHY_CAPTION</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DIMENSION_TYPE</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>HIERARCHY_CARDINALITY</td>\n<td>int</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DEFAULT_MEMBER</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>ALL_MEMBER</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DESCRIPTION</td>\n<td>string</td>\n<td>A Human-readable description of the dimension.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>STRUCTURE</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>IS_VIRTUAL</td>\n<td>boolean</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>IS_READWRITE</td>\n<td>boolean</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DIMENSION_UNIQUE_SETTINGS</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DIMENSION_MASTER_UNIQUE_NAME</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DIMENSION_IS_VISIBLE</td>\n<td>boolean</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>HIERARCHY_ORDINAL</td>\n<td>int</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DIMENSION_IS_SHARED</td>\n<td>boolean</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>HIERARCHY_IS_VISIBLE</td>\n<td>boolean</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>HIERARCHY_ORIGIN</td>\n<td></td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>HIERARCHY_DISPLAY_FOLDER</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>INSTANCE_SELECTION</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n</table>", "guessedname": "discoverMDHierarchies", "guessedtype": "function"}, "discoverMDSets": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_SETS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_SETS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_SETS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_SETS</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverMDSets", "guessedtype": "function"}, "discoverMDLevels": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_LEVELS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_LEVELS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_LEVELS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_LEVELS</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverMDLevels", "guessedtype": "function"}, "discoverDBSchemata": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DBSCHEMA_SCHEMATA</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DBSCHEMA_SCHEMATA</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_DBSCHEMA_SCHEMATA\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DBSCHEMA_SCHEMATA</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverDBSchemata", "guessedtype": "function"}, "discoverDBProviderTypes": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DBSCHEMA_PROVIDER_TYPES</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DBSCHEMA_PROVIDER_TYPES</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_DBSCHEMA_PROVIDER_TYPES\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DBSCHEMA_PROVIDER_TYPES</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverDBProviderTypes", "guessedtype": "function"}, "discoverDBTablesInfo": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DBSCHEMA_TABLES_INFO</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DBSCHEMA_TABLES_INFO</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_DBSCHEMA_TABLES_INFO\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DBSCHEMA_TABLES_INFO</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverDBTablesInfo", "guessedtype": "function"}, "discoverMDDimensions": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_DIMENSIONS</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_DIMENSIONS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_DIMENSIONS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_DIMENSIONS</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>CATALOG_NAME</td>\n<td>string</td>\n<td>Name of the catalog</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>SCHEMA_NAME</td>\n<td>string</td>\n<td>Not supported</td>\n<td>Yes</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>CUBE_NAME</td>\n<td>string</td>\n<td>Name of the cube.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DIMENSION_NAME</td>\n<td>string</td>\n<td>Name of the dimension.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DIMENSION_UNIQE_NAME</td>\n<td>string</td>\n<td>Unique name for this dimension.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DIMENSION_GUID</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DIMENSION_CAPTION</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DIMENSION_ORDINAL</td>\n<td>int</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DIMENSION_TYPE</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DIMENSION_CARDINALITY</td>\n<td>int</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DEFAULT_HIERARCHY</td>\n<td>string</td>\n<td></td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>DESCRIPTION</td>\n<td>string</td>\n<td>A Human-readable description of the dimension.</td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>IS_VIRTUAL</td>\n<td>boolean</td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>IS_READWRITE</td>\n<td>boolean</td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DIMENSION_UNIQUE_SETTINGS</td>\n<td></td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>DIMENSION_MASTER_UNIQUE_NAME</td>\n<td></td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>IS_VISIBLE</td>\n<td>boolean</td>\n<td></td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n</table>", "guessedname": "discoverMDDimensions", "guessedtype": "function"}, "execute": {"return": {"type": "Xmla.Resultset|Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Execute</code> method. For an asynchronous request, the return value is not defined. For synchronous requests, an instance of a <code>Xmla.Resultset</code> that represents the multi-dimensional result set of the MDX query. If the <code>Format</code> property in the request was set to <code>Tabular</code>, then an instance of the \n<code><a href=\"Xmla.Rowset#class_Xmla.Rowset\">Rowset</a></code> class is returned to represent the <code>Resultset</code>."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A <code>Execute</code> request."}], "description": "Sends an MDX query to a XML/A DataSource to invoke the XML/A <code>Execute</code> method and obtain the multi-dimensional resultset.\nOptions are passed using a generic <code>options</code> object.\nApplicable properties of the <code>options</code> object are:\n<ul>\n<li><code>url</code> {string} REQUIRED the URL of a XML/A datasource. \nThis should be a value obtained from the <code>URL</code> column of the <code>DISCOVER_DATASOURCES</code> rowset\n(see: <code><a href=\"method_discoverDataSources\">discoverDataSources()</a></code>).\n</li>\n<li><code>statement</code> - {string} The MDX query to send to the server.\n</li>\n<li>\n<code>properties</code> {Object} XML/A properties. \nThe list of all valid properties can be obtained from the <code>DISCOVER_PROPERTIES</code> schema rowset \n(see <code><a href=\"#method_discoverProperties()\">discoverProperties()</a></code>). \nTypically, <code>execute()</code> requires these properties:<dl>\n<dt><code>DataSourceInfo</code> property</dt>\n<dd>Identifies a data source managed by the XML/A server.\nTo specify this property, you can use the static final constant\n<code><a href=\"#property_PROP_DATASOURCEINFO\">PROP_DATASOURCEINFO</a></code>\nas key in the <code>properties</code> object of the <code>options</code> object passed to the <code>execute()</code> method.\nValid values for this property should be obtained from the <code>DataSourceInfo</code> column \nof the <code>DISCOVER_DATASOURCES</code> schema rowset (see: <code><a href=\"#method_discoverDataSources\">discoverDataSources()</a></code>).\nNote that the values for the <code>DataSourceInfo</code> property and the <code>url</code> must both be taken from the same row of the <code>DISCOVER_DATASOURCES</code> schema rowset.\n</dd>\n<dt><code>Catalog</code> property</dt>\n<dd>Identifies a catalog applicable for the datasource.\nTo specify this property, you can use the static final constant\n<code><a href=\"#property_PROP_CATALOG\">PROP_CATALOG</a></code>\nas key in the <code>properties</code> object of the <code>options</code> object passed to the <code>execute()</code> method.\nValid values for this property should be obtained from the <code>CATALOG_NAME</code> column \nof the <code>DBSCHEMA_CATALOGS</code> schema rowset (see: <code><a href=\"#method_discoverDBCatalogs\">discoverDBCatalogs()</a></code>).\n</dd>\n</dl>\n</li>\n<li><code>async</code> {boolean} \nDetermines how the request is performed:<ul>\n<li><code>true</code>: The request is performed asynchronously: the call to <code>request()</code> will not block and return immediately.\nIn this case, the return value of the <code>request()</code> method is not defined, \nand the response must be received by registering a listener \n(see <code><a href=\"#method_addListener\">addListener()</a></code>).\n</li>\n<li><code>false</code>: The request is performed synchronously: the call to <code>execute()</code> will block until it receives a response from the XML/A server or times out.\nIn this case, a <code>Resultset</code> is returned that represents the multi-dimensional data set.\nIf you registered any <code>REQUEST_XXX</code> and/or <code>EXECUTE_XXX</code> listeners (see <code><a href=\"#method_addListener\">addListener()</a></code>), \nthen these will still be notified.\n</li>\n</ul>\n</li>\n</ul>", "guessedname": "execute", "guessedtype": "function"}, "discoverMDProperties": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>MDSCHEMA_PROPERTIES</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>MDSCHEMA_PROPERTIES</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using \n<code><a href=\"#property_MDSCHEMA_PROPERTIES\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>MDSCHEMA_PROPERTIES</code> schema rowset. \n...todo...\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n</table>", "guessedname": "discoverMDProperties", "guessedtype": "function"}, "discoverSchemaRowsets": {"return": {"type": "Xmla.Rowset", "description": "The result of the invoking the XML/A <code>Discover</code> method. For synchronous requests, an instance of a <code><a href=\"Xmla.Rowset.html#Xmla.Rowset\">Xmla.Rowset</a></code> that represents the <code>DISCOVER_DATASOURCES</code> schema rowset. For an asynchronous request, the return value is not defined: you should add a listener (see: <code><a href=\"#method_addListener\">addListener()</a></code>) and listen for the <code>success</code> (see: <code><a href=\"#property_EVENT_SUCCESS\">EVENT_SUCCESS</a></code>) or <code>discoversuccess</code> (see: <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>) events."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the XML/A a <code>DISCOVER_SCHEMA_ROWSETS</code> request."}], "description": "Invokes the <code><a href=\"#method_discover\">discover()</a></code> method using <code><a href=\"#property_DISCOVER_SCHEMA_ROWSETS\"></a></code> as value for the <code>requestType</code>, \nand retrieves the <code>DISCOVER_SCHEMA_ROWSETS</code> schema rowset. \nThis rowset lists all possible request types supported by this provider.\nThe rowset has the following columns:\n<table border=\"1\" class=\"schema-rowset\">\n<tr>\n<th>Column Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Restriction</th>\n<th>Nullable</th>\n</tr>\n<tr>\n<td>SchemaName</td>\n<td>string</td>\n<td>The requestType. </td>\n<td>Yes</td>\n<td>No</td>\n</tr>\n<tr>\n<td>Restrictions</td>\n<td>array</td>\n<td>A list of columns that may be used to filter the schema rowset.</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>string</td>\n<td>A human readable description of the schema rowset that is returned when using this requestType</td>\n<td>No</td>\n<td>Yes</td>\n</tr>\n</table>", "guessedname": "discoverSchemaRowsets", "guessedtype": "function"}, "request": {"return": {"type": "Xmla.Rowset|Xmla.Resultset", "description": "The result of the invoking the XML/A method. For an asynchronous request, the return value is not defined. For synchronous requests, <code>Discover</code> requests return an instance of a <code>Xmla.Rowset</code>, and <code>Execute</code> results return an instance of a <code>Xmla.Resultset</code>."}, "params": [{"type": "Object", "name": "options", "description": " An object whose properties convey the options for the request."}], "description": "Sends a request to the XML/A server.\nThis method is rather low-level and allows full control over the request \nby passing an options object. General properties of the options object are:\n<ul>\n<li><code>method</code> {string} REQUIRED the XML/A method to invoke. This should be one of the following constants:\n<dl>\n<dt><code><a href=\"#property_METHOD_DISCOVER\">METHOD_DISCOVER</a></code></dt>\n<dd>\n<p>\nThis method is used to obtain metadata from the XML/A service or XML/A provider. \nMetadata is returned in a tabular format called Schema Rowsets, which are represented by an instance of the \n<code><a href=\"Xmla.Rowset.html#class_Xmla.Rowset\">Xmla.Rowset</a></code> class.\nFor these types of requests, you must pass the <code>requestType</code> option to specify which schema rowset you want to obtain.\nIn addition, you can specify a <code>restrictions</code> object that is used as filter criteria to restrict which rows will be returned in the rowset.\n</p>\n<p>\nInstead of explicitly passing <code>METHOD_DISCOVER</code> as the <code>requestType</code>, you can also call the \n<code><a href=\"#method_discover\">discover()</a></code> method (which requires you to explictly pass a <code>requestType</code> option).\nFinally, you can also call one of the <code>discoverXXX()</code> methods in order to request a particular schema rowset.\n</p>\n</dd>\n<dt><code><a href=\"#property_METHOD_EXECUTE\">METHOD_EXECUTE</a></code></dt>\n<dd>\n<p>\nThis method is used to send an MDX quey to the XML/A provider. \nQuery results are returned in a multidimentsional format which is represented by an instance of the \n<code><a href=\"Xmla.Resultset.html#class_Xmla.Resultset\">Xmla.Resultset</a></code> class.\nFor these types of requests, you must pass the <code>statement</code> option to specify the MDX query.\n</p>\n<p>\nInstead of explicitly passing <code>METHOD_EXECUTE</code> as the <code>requestType</code>, you can also call the \n<code><a href=\"#method_execute\">execute()</a></code> method.\n</p>\n</dd>\n</dl>\n</li>\n<li><code>url</code> {string} REQUIRED the URL of XML/A service, or of a XML/A datasource. \nTypically, you first use the URL of a XML/A service (like <code>http://your.pentaho.server:8080/pentaho/Xmla?userid=joe&amp;password=password</code>) \nand use that to retrieve the <code>DISCOVER_DATASOURCES</code> rowset. \nThen, you can connect to a XML/A datasource using the value returned by the <code>URL</code> column of the <code>DISCOVER_DATASOURCES</code> rowset \n(typically, you also have to set a <code>DataSourceInfo</code> property using the value found in the <code>DataSourceInfo</code> column of the <code>DISCOVER_DATASOURCES</code> rowset).\n</li>\n<li>\n<code>properties</code> {Object} XML/A properties. \nThe appropriate types and values of XML/A properties are dependent upon the specific method and requestType.\nThe XML/A standard defines a set of pre-defined properties. \nThe <code>Xmla</code> class defines a static final property for each of these (see the <code>PROP_XXX</code> constants).\nThe list of all valid properties can be obtained from the <code>DISCOVER_PROPERTIES</code> schema rowset \n(see <code><a href=\"#method_discoverProperties()\">discoverProperties()</a></code>). \nEach javascript property of the <code>properties</code> object is mapped literally to a XML/A property.\n</li>\n<li><code>async</code> {boolean} \nDetermines how the request is performed:<ul>\n<li><code>true</code>: The request is performed asynchronously: the call to <code>request()</code> will not block and return immediately.\nIn this case, the return value of the <code>request()</code> method is not defined, \nand the response must be received by registering a listener \n(see <code><a href=\"#method_addListener\">addListener()</a></code>).\n</li>\n<li><code>false</code>: The request is performed synchronously: the call to <code>request()</code> will block until it receives a response from the XML/A server or times out.\nIn this case, the <code>request()</code> method returns \na <code>Rowset</code> (for <code>Discover</code> requests) or \na <code>Resultset</code> (for <code>Execute</code> requests).\nIf you registered any listeners (see <code><a href=\"#method_addListener\">addListener()</a></code>), \nthen these will still be notified of any events (such as receiving the response).\n</li>\n</ul>\n</li>\n</ul>\nOther parts of the <code>options</code> object are method-specific.\n<ul>\n<li>The following options are applicable in case the <code>method</code> is <code>METHOD_DISCOVER</code>:\n<ul>\n<li><code>requestType</code> - {string} Applies to the Discover method and indicates the kind of schema rowset to retrieve.\nYou can use one of the <code>DISCOVER_XXX</code>, <code>DBSCHEMA_XXX</code> or <code>MDSCHEMA_XXX</code> constants for this property.\nYou can also dymically discover which values for <code>requestType</code> are supported by the XML/A provider using the \n<code>DISCOVER_SCHEMA_ROWSETS</code> rowset (see: <code><a href=\"method_discoverMDSchemaRowsets\">discoverMDSchemaRowsets()</a></code>).\nSee the <code><a href=\"#method_discover\">discover()</a></code> method for more information.\n</li>\n<li>\n<code>restrictions</code> {Object} XML/A restrictions are used to filter the requested schema rowset. \nFor more information on restrictions, see the <code><a href=\"#method_discover\">discover()</a></code> method.\n</li>\n</ul>\n</li>\n<li>The following options are applicable in case the <code>method</code> is <code>METHOD_EXECUTE</code>:\n<ul>\n<li><code>statement</code> - {string} Applies to the Execute method and specifies the MDX query to send to the server.\n</li>\n</ul>\n</li>\n</ul>\nInstead of calling this method directly, consider calling \n<code><a href=\"#method_discover\">discover()</a></code> (to obtain a schema rowset),\n<code><a href=\"#method_execute\">execute()</a></code> (to issue a MDX query), \nor one of the specialized <code>discoverXXX()</code> methods (to obtain a particular schema rowset).", "guessedname": "request", "guessedtype": "function"}}, "file": "Xmla.js", "guessedtype": "function", "shortname": "Xmla", "properties": {"responseText": {"default": "<code>null</code>", "type": "{string}", "description": "This property is set to <code>null</code> right before sending an XML/A request.\nWhen a successfull response is received, the XML response is stored to this property as plain text.\nIf you are interested in processing a DOM document rather than the raw XML text, see the \n<code><a href=\"#property_responseXML\">responseXML</a></code> property.\nIf you are interested in traversing the dataset returned in the XML/A response, see the\n<code><a href=\"#property_response\">response</a></code> property.\nNote that it is not safe to read this property immediately after doing an asynchronous request.\nFor asynchronous requests, you can read this property by the time the <code>XXX_SUCCESS</code> event handlers are notified (until it is set to <code>null</code> again by a subsequent request).", "guessedname": "responseText", "guessedtype": "property"}, "PROP_CONTENT_SCHEMA": {"description": "Can be used as value for the XML/A <code>Content</code> property \n(see: <code><a href=\"#property_PROP_CONTENT\">PROP_CONTENT</a></code>).\nThis value specifies that the response should only return XML Schema metadata, but no data.", "default": "<code>Schema</code>", "static": "", "guessedname": "PROP_CONTENT_SCHEMA", "guessedtype": "property", "type": "string", "final": ""}, "DBSCHEMA_CATALOGS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DBSCHEMA_CATALOGS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the <code><a href=\"#method_discoverDBCatalogs\">discoverDBCatalogs()</a></code> method. \nThe <code>discoverDBCatalogs()</code> method issues a request to invoke the Discover method using <code>DBSCHEMA_CATALOGS</code> as requestType.", "default": "<code>DBSCHEMA_CATALOGS</code>", "static": "", "guessedname": "DBSCHEMA_CATALOGS", "guessedtype": "property", "type": "string", "final": ""}, "PROP_CONTENT": {"description": "Can be used as key in the <code>properties</code> member of the <code>options</code> object \npassed to the <code><a href=\"#method_request\">request()</a></code> method \nto specify the XML/A <code>Content</code> property.\nThe XML/A <code>Content</code> property specifies whether to return data and/or XML Schema metadata by the <code>Discover</code> and <code>Execute</code> invocations.\nValid values for the <code>Content</code> property are available as the static final properties \n<code><a href=\"#property_PROP_CONTENT_DATA\">PROP_CONTENT_DATA</a></code>, \n<code><a href=\"#property_PROP_CONTENT_NONE\">PROP_CONTENT_NONE</a></code>, \n<code><a href=\"#property_PROP_CONTENT_SCHEMA\">PROP_CONTENT_SCHEMA</a></code>, \n<code><a href=\"#property_PROP_CONTENT_SCHEMADATA\">PROP_CONTENT_SCHEMADATA</a></code>.\nNote: This key is primarily intended for clients that use the low-level <code><a href=\"#method_request\">request()</a></code> method.\nYou should not set this property when calling the <code><a href=\"#method_request\">discover()</a></code> method, \nthe <code><a href=\"#method_execute\">execute()</a></code> method, \nor any of the <code>discoverXXX()</code> methods.", "default": "<code>Content</code>", "static": "", "guessedname": "PROP_CONTENT", "guessedtype": "property", "type": "string", "final": ""}, "DISCOVER_LITERALS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DISCOVER_LITERALS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the <code><a href=\"#method_discoverLiterals\">discoverLiterals()</a></code> method. \nThe <code>discoverLiterals()</code> method issues a request to invoke the Discover method using DISCOVER_LITERALS as requestType.", "default": "<code>DISCOVER_LITERALS</code>", "static": "", "guessedname": "DISCOVER_LITERALS", "guessedtype": "property", "type": "string", "final": ""}, "METHOD_DISCOVER": {"description": "Can be used as value for the method option in the options object passed to the \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server. \nInstead of explicitly setting the method yourself, consider using the <code><a href=\"#method_request\">discover()</a></code> method.\nThe <code>discover()</code> method automatically sets the method option to <code>METHOD_DISCOVER</code>.", "default": "<code>Discover</code>", "static": "", "guessedname": "METHOD_DISCOVER", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_GENERAL": {"description": "Unifies all general events, that is, all events that are not method-specific.\nThis constant can be used as events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method,\nor you can use array concatenation to combine it with other arrays of <code>EVENT_XXX</code> constants.\nThis constant is especially intended for asyncronous handling of Schema rowset data.", "default": "<code>[EVENT_REQUEST,EVENT_SUCCESS,EVENT_ERROR]</code>", "static": "", "guessedname": "EVENT_GENERAL", "guessedtype": "property", "type": "string[]", "final": ""}, "EVENT_EXECUTE": {"description": "Indicates the <code>execute</code> event. \nThis constant can be used as en entry in the events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.\nThe <code>execute</code> event is method-specific, and is fired before submitting an <code>Execute</code> request\n(see: <code><a href=\"#method_execute\">execute()</a></code>)\nto the server, but after firing the <code>request</code> event\n(see: <code><a href=\"#property_EVENT_REQUEST\">EVENT_REQUEST</a></code>).\nThe <code>EVENT_EXECUTE</code> event is <em>cancelable</em>:\nthe <code>handler</code> function specified in the listener object passed to <code>addListener</code> should return a boolen, indicating \nwhether the respective operation should be canceled.", "default": "<code>execute</code>", "static": "", "guessedname": "EVENT_EXECUTE", "guessedtype": "property", "type": "string", "final": ""}, "MDSCHEMA_ACTIONS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>MDSCHEMA_ACTIONS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDActions\">discoverMDActions()</a></code> method. \nThe <code>discoverMDActions()</code> method issues a request to invoke the Discover method using <code>MDSCHEMA_ACTIONS</code> as requestType.", "default": "<code>MDSCHEMA_ACTIONS</code>", "static": "", "guessedname": "MDSCHEMA_ACTIONS", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_REQUEST": {"description": "Indicates the <code>request</code> event. \nThis constant can be used as en entry in the events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.\nThe <code>request</code> event is the first event that is fired before submitting a request \n(see: <code><a href=\"#method_request\">request()</a></code>)\nto the server, and before firing the method-specific request events \n(see <code><a href=\"#property_EVENT_EXECUTE\">EVENT_EXECUTE</a></code> \nand <code><a href=\"#property_EVENT_DISCOVER\">EVENT_DISCOVER</a></code>). \nThe <code>request</code> event itself is not method-specific, and fires for <code>Execute</code> as well as <code>Discover</code> requests.\nThe <code>EVENT_REQUEST</code> event is <em>cancelable</em>:\nthe <code>handler</code> function specified in the listener object passed to <code>addListener</code> should return a boolen, indicating \nwhether the respective operation should be canceled.", "default": "<code>request</code>", "static": "", "guessedname": "EVENT_REQUEST", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_DISCOVER_ERROR": {"description": "Indicates the <code>discovererror</code> event. \nThis constant can be used as en entry in the events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.\nThe <code>discovererror</code> is method-specific and fired when an error occurs while sending an <code>Discover</code> request, \nor receiving a response to an <code>Discover</code method.\n(see: <code><a href=\"#method_discover\">discover()</a></code>).\nThis is event is not cancelable.", "default": "<code>discovererror</code>", "static": "", "guessedname": "EVENT_DISCOVER_ERROR", "guessedtype": "property", "type": "string", "final": ""}, "PROP_FORMAT_TABULAR": {"description": "Can be used as value for the \n<code><a href=\"#property_PROP_FORMAT>PROP_FORMAT</a></code> key of the \n<code>properties</code> member of the \n<code>options</code> object passed to the \n<code><a href=\"#method_execute\">execute()</a></code> method. \nWhen used, this specifies that the multidimensional resultset should be returned in a tabular format,\ncauseing the multidimensional resultset to be represented with an instance of the  \n<code><a href=\"Xmla.Rowset#class_Xmla.Rowset\">Xmla.Rowset</a></code> class.", "default": "<code>Tabular</code>", "static": "", "guessedname": "PROP_FORMAT_TABULAR", "guessedtype": "property", "type": "string", "final": ""}, "PROP_CONTENT_NONE": {"description": "Can be used as value for the XML/A <code>Content</code> property \n(see: <code><a href=\"#property_PROP_CONTENT\">PROP_CONTENT</a></code>).\nThis value specifies that the response should contain neither data nor XML Schema metadata.\nThis is useful to check the validity of the request.", "default": "<code>None</code>", "static": "", "guessedname": "PROP_CONTENT_NONE", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_EXECUTE_SUCCESS": {"description": "Indicates the <code>executesuccess</code> event. \nThis constant can be used as en entry in the events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.\nThe <code>executesuccess</code> event is method-specific and fired only after receiving and processing a normal response \n(that is, a response that does not contain a <code>SoapFault</code>)\nto an incovation of the XML/A <code>Execute</code> method\n(see: <code><a href=\"#method_execute\">execute()</a></code>).\nThis is event is not cancelable.", "default": "<code>executesuccess</code>", "static": "", "guessedname": "EVENT_EXECUTE_SUCCESS", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_ALL": {"description": "Unifies all method-specific and non method-specific events.\nThis constant can be used as events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.", "default": "<code>[].concat(Xmla.EVENT_GENERAL, Xmla.EVENT_DISCOVER_ALL, Xmla.EVENT_EXECUTE_ALL)</code>", "static": "", "guessedname": "EVENT_ALL", "guessedtype": "property", "type": "string[]", "final": ""}, "DBSCHEMA_COLUMNS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DBSCHEMA_COLUMNS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the <code><a href=\"#method_discoverDBColumns\">discoverDBColumns()</a></code> method. \nThe <code>discoverDBColumns()</code> method issues a request to invoke the Discover method using <code>DBSCHEMA_COLUMNS</code> as requestType.", "default": "<code>DBSCHEMA_COLUMNS</code>", "static": "", "guessedname": "DBSCHEMA_COLUMNS", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_EXECUTE_ERROR": {"description": "Indicates the <code>executeerror</code> event. \nThis constant can be used as en entry in the events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.\nThe <code>executeerror</code> event is method-specific and fired when an error occurs while sending an <code>Execute</code> request, or receiving a response to an <code>Execute</code method.\n(see: <code><a href=\"#method_execute\">execute()</a></code>).\nThis is event is not cancelable.", "default": "<code>executeerror</code>", "static": "", "guessedname": "EVENT_EXECUTE_ERROR", "guessedtype": "property", "type": "string", "final": ""}, "MDSCHEMA_SETS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the \n<code>MDSCHEMA_SETS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDSets\">discoverMDSets()</a></code> method. \nThe <code>discoverMDSets()</code> method issues a request to invoke the Discover method using\n<code>MDSCHEMA_SETS</code> as requestType.", "default": "<code>MDSCHEMA_SETS</code>", "static": "", "guessedname": "MDSCHEMA_SETS", "guessedtype": "property", "type": "string", "final": ""}, "listeners": {"description": "This object stores listeners.\nEach key is a listener type (see the static final <code>EVENT_XXX</code> constants), \neach value is an array of listener objects that are subscribed to that particular event.", "default": "<pre>\n{\n&nbsp;     \"request\": []\n&nbsp;,   \"succss\": []\n&nbsp;,   \"error\": []\n&nbsp;,   \"discover\": []\n&nbsp;,   \"discoversuccss\": []\n&nbsp;,   \"discovererror\": []\n&nbsp;,   \"execute\": []\n&nbsp;,   \"executesuccss\": []\n&nbsp;,   \"executeerror\": []\n}</pre>", "protected": "", "guessedname": "listeners", "guessedtype": "property", "type": "Object"}, "EVENT_EXECUTE_ALL": {"description": "Unifies all events specific for the <code>Execute</code> method.\nThis constant can be used as events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method,\nor you can use array concatenation to combine it with other arrays of <code>EVENT_XXX</code> constants.", "default": "<code>[EVENT_EXECUTE,EVENT_EXECUTE_SUCCESS,EVENT_EXECUTE_ERROR]</code>", "static": "", "guessedname": "EVENT_EXECUTE_ALL", "guessedtype": "property", "type": "string[]", "final": ""}, "DISCOVER_KEYWORDS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DISCOVER_KEYWORDS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this requestType yourself, consider calling the <code><a href=\"#method_discoverLiterals\">discoverKeywords()</a></code> method. \nThe <code>discoverKeywords()</code> method issues a request to invoke the Discover method using DISCOVER_KEYWORDS as requestType.", "default": "<code>DISCOVER_KEYWORDS</code>", "static": "", "guessedname": "DISCOVER_KEYWORDS", "guessedtype": "property", "type": "string", "final": ""}, "MDSCHEMA_HIERARCHIES": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the \n<code>MDSCHEMA_HIERARCHIES</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDHierarchies\">discoverMDHierarchies()</a></code> method. \nThe <code>discoverMDHierarchies()</code> method issues a request to invoke the Discover method using\n<code>MDSCHEMA_HIERARCHIES</code> as requestType.", "default": "<code>MDSCHEMA_HIERARCHIES</code>", "static": "", "guessedname": "MDSCHEMA_HIERARCHIES", "guessedtype": "property", "type": "string", "final": ""}, "MDSCHEMA_DIMENSIONS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the \n<code>MDSCHEMA_DIMENSIONS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDDimensions\">discoverMDCubes()</a></code> method. \nThe <code>discoverMDDimensions()</code> method issues a request to invoke the Discover method using\n<code>MDSCHEMA_DIMENSIONS</code> as requestType.", "default": "<code>MDSCHEMA_DIMENSIONS</code>", "static": "", "guessedname": "MDSCHEMA_DIMENSIONS", "guessedtype": "property", "type": "string", "final": ""}, "soapMessage": {"default": "<code>null</code>", "type": "{string}", "description": "The soap message sent in the last request to the server.", "guessedname": "soapMessage", "guessedtype": "property"}, "MDSCHEMA_FUNCTIONS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the \n<code>MDSCHEMA_FUNCTIONS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDFunctions\">discoverMDFunctions()</a></code> method. \nThe <code>discoverMDFunctions()</code> method issues a request to invoke the Discover method using\n<code>MDSCHEMA_FUNCTIONS</code> as requestType.", "default": "<code>MDSCHEMA_FUNCTIONS</code>", "static": "", "guessedname": "MDSCHEMA_FUNCTIONS", "guessedtype": "property", "type": "string", "final": ""}, "MDSCHEMA_LEVELS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the \n<code>MDSCHEMA_LEVELS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDLevels\">discoverMDLevels()</a></code> method. \nThe <code>discoverMDLevels()</code> method issues a request to invoke the Discover method using\n<code>MDSCHEMA_LEVELS</code> as requestType.", "default": "<code>MDSCHEMA_LEVELS</code>", "static": "", "guessedname": "MDSCHEMA_LEVELS", "guessedtype": "property", "type": "string", "final": ""}, "PROP_AXISFORMAT": {"description": "Can be used as key in the <code>properties</code> member of the <code>options</code> object \npassed to the <code><a href=\"#method_execute\">execute()</a></code> method \nto specify the XML/A <code>AxisFormat</code> property.\nThe XML/A <code>AxisFormat</code> property specifies how the client wants to receive the multi-dimensional resultset of a MDX query.\nValid values for the <code>AxisFormat</code> property are available as the static final properties \n<code><a href=\"#property_PROP_AXISFORMAT_TUPLE\">PROP_AXISFORMAT_TUPLE</a></code>, \n<code><a href=\"#property_PROP_AXISFORMAT_CLUSTER\">PROP_AXISFORMAT_CLUSTER</a></code>,\n<code><a href=\"#property_PROP_AXISFORMAT_CUSTOM\">PROP_AXISFORMAT_CUSTOM</a></code>.", "default": "<code>AxisFormat</code>", "static": "", "guessedname": "PROP_AXISFORMAT", "guessedtype": "property", "type": "string", "final": ""}, "responseXml": {"default": "<code>null</code>", "type": "{DOMDocument}", "description": "This property is set to <code>null</code> right before sending an XML/A request.\nWhen a successfull response is received, the XML response is stored to this property as a DOM Document.\nIf you are interested in processing the raw XML text rather than a DOM document, see the \n<code><a href=\"#property_responseText\">responseText</a></code> property.\nIf you are interested in traversing the dataset returned in the XML/A response, see the\n<code><a href=\"#property_response\">response</a></code> property.\nNote that it is not safe to read this property immediately after doing an asynchronous request.\nFor asynchronous requests, you can read this property by the time the <code>XXX_SUCCESS</code> event handlers are notified (until it is set to <code>null</code> again by a subsequent request).", "guessedname": "responseXml", "guessedtype": "property"}, "PROP_CONTENT_SCHEMADATA": {"description": "Can be used as value for the XML/A <code>Content</code> property \n(see: <code><a href=\"#property_PROP_CONTENT\">PROP_CONTENT</a></code>).\nThis value specifies that the response should return both data as well as XML Schema metadata.", "default": "<code>SchemaData</code>", "static": "", "guessedname": "PROP_CONTENT_SCHEMADATA", "guessedtype": "property", "type": "string", "final": ""}, "PROP_FORMAT_MULTIDIMENSIONAL": {"description": "Can be used as value for the \n<code><a href=\"#property_PROP_FORMAT>PROP_FORMAT</a></code> key of the \n<code>properties</code> member of the \n<code>options</code> object passed to the \n<code><a href=\"#method_execute\">execute()</a></code> method. \nWhen used, this specifies that the multidimensional resultset should be returned in a multidimensional format.\nCurrently, Xmla4js does not provide a class to represent the resultset in this format.\nHowever, you can access the results as xml through the \n<code><a href=\"#property_responseText\">responseText</a></code> and\n<code><a href=\"#property_responseXML\">responseXML</a></code> properties.", "default": "<code>Multidimensional</code>", "static": "", "guessedname": "PROP_FORMAT_MULTIDIMENSIONAL", "guessedtype": "property", "type": "string", "final": ""}, "METHOD_EXECUTE": {"description": "Can be used as value for the method option property in the options objecct passed to the \n<code><a href=\"#method_request\">request()</code></a> method to invoke the XML/A Execute method on the server. \nInstead of explicitly setting the method yourself, consider using the <code><a href=\"#method_execute\">execute()</a></code> method.\nThe <code>execute()</code> method automatically sets the method option to <code>METHOD_EXECUTE</code>.", "default": "<code>Discover</code>", "static": "", "guessedname": "METHOD_EXECUTE", "guessedtype": "property", "type": "string", "final": ""}, "DBSCHEMA_TABLES": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DBSCHEMA_TABLES</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the <code><a href=\"#method_discoverDBTables\">discoverDBColumns()</a></code> method. \nThe <code>discoverDBColumns()</code> method issues a request to invoke the Discover method using <code>DBSCHEMA_TABLES</code> as requestType.", "default": "<code>DBSCHEMA_TABLES</code>", "static": "", "guessedname": "DBSCHEMA_TABLES", "guessedtype": "property", "type": "string", "final": ""}, "MDSCHEMA_MEASURES": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the \n<code>MDSCHEMA_MEASURES</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDMeasures\">discoverMDMeasures()</a></code> method. \nThe <code>discoverMDMeasures()</code> method issues a request to invoke the Discover method using\n<code>MDSCHEMA_MEASURES</code> as requestType.", "default": "<code>MDSCHEMA_MEASURES</code>", "static": "", "guessedname": "MDSCHEMA_MEASURES", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_DISCOVER": {"description": "Indicates the <code>discover</code> event. \nThis constant can be used as en entry in the events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.\nThe <code>discover</code> event is method-specific, and is fired before submitting a <code>Discover</code> request\n(see: <code><a href=\"#method_discover\">discover()</a></code>)\nto the server, but after firing the <code>request</code> event\n(see: <code><a href=\"#property_EVENT_DISCOVER\">EVENT_DISCOVER</a></code>).\nThe <code>EVENT_DISCOVER</code> event is <em>cancelable</em>:\nthe <code>handler</code> function specified in the listener object passed to <code>addListener</code> should return a boolen, indicating \nwhether the respective operation should be canceled.", "default": "<code>discover</code>", "static": "", "guessedname": "EVENT_DISCOVER", "guessedtype": "property", "type": "string", "final": ""}, "PROP_CONTENT_DATA": {"description": "Can be used as value for the XML/A <code>Content</code> property \n(see: <code><a href=\"#property_PROP_CONTENT\">PROP_CONTENT</a></code>).\nThis value specifies that the response should contain only data, but no XML Schema metadata.\nAs the <code>Xmla</code> class relies on the XML Schema metadata to construct Rowset and Resultset instances,\nthis option is primarily useful if you know how to process the XML response directly.", "default": "<code>Data</code>", "static": "", "guessedname": "PROP_CONTENT_DATA", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_DISCOVER_ALL": {"description": "Unifies all events specific for the <code>Discover</code> method.\nThis constant can be used as events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method,\nor you can use array concatenation to combine it with other arrays of <code>EVENT_XXX</code> constants.", "default": "<code>[EVENT_DISCOVER,EVENT_DISCOVER_SUCCESS,EVENT_DISCOVER_ERROR]</code>", "static": "", "guessedname": "EVENT_DISCOVER_ALL", "guessedtype": "property", "type": "string[]", "final": ""}, "DBSCHEMA_SCHEMATA": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DBSCHEMA_SCHEMATA</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the <code><a href=\"#method_discoverDBProviderTypes\">discoverDBColumns()</a></code> method. \nThe <code>discoverDBColumns()</code> method issues a request to invoke the Discover method using <code>DBSCHEMA_SCHEMATA</code> as requestType.", "default": "<code>DBSCHEMA_SCHEMATA</code>", "static": "", "guessedname": "DBSCHEMA_SCHEMATA", "guessedtype": "property", "type": "string", "final": ""}, "PROP_AXISFORMAT_CLUSTER": {"description": "Can be used as value for the <code>AxisFormat</code> XML/A property \n(see: <code><a href=\"#property_PROP_AXISFORMAT\">PROP_AXISFORMAT</a></code>) \nin invocations of the <code>Execute</code> method \n(see: <code><a href=\"#method_execute\">execute()</a></code>).", "default": "<code>ClusterFormat</code>", "static": "", "guessedname": "PROP_AXISFORMAT_CLUSTER", "guessedtype": "property", "type": "string", "final": ""}, "MDSCHEMA_PROPERTIES": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the \n<code>MDSCHEMA_PROPERTIES</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDProperties\">discoverMDProperties()</a></code> method. \nThe <code>discoverMDProperties()</code> method issues a request to invoke the Discover method using\n<code>MDSCHEMA_PROPERTIES</code> as requestType.", "default": "<code>MDSCHEMA_PROPERTIES</code>", "static": "", "guessedname": "MDSCHEMA_PROPERTIES", "guessedtype": "property", "type": "string", "final": ""}, "DISCOVER_ENUMERATORS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DISCOVER_ENUMERATORS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the <code><a href=\"#method_discoverEnumerators\">discoverEnumerators()</a></code> method. \nThe <code>discoverSchemaRowsets()</code> method issues a request to invoke the Discover method using <code>DISCOVER_SCHEMA_ROWSETS</code> as requestType.", "default": "<code>DISCOVER_ENUMERATORS</code>", "static": "", "guessedname": "DISCOVER_ENUMERATORS", "guessedtype": "property", "type": "string", "final": ""}, "MDSCHEMA_MEMBERS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the \n<code>MDSCHEMA_MEMBERS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDMembers\">discoverMDMembers()</a></code> method. \nThe <code>discoverMDMembers()</code> method issues a request to invoke the Discover method using\n<code>MDSCHEMA_MEMBERS</code> as requestType.", "default": "<code>MDSCHEMA_MEMBERS</code>", "static": "", "guessedname": "MDSCHEMA_MEMBERS", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_ERROR": {"description": "Indicates the <code>error</code> event. \nThis constant can be used as en entry in the events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.\nThe <code>error</code> is fired when an error occurs while sending a request or receiving a response.\nThe <code>error</code> event is not method-specific, and fires for errors encountered during both <code>Execute</code> as well as <code>Discover</code> method invocations.\nThis is event is not cancelable.", "default": "<code>error</code>", "static": "", "guessedname": "EVENT_ERROR", "guessedtype": "property", "type": "string", "final": ""}, "PROP_AXISFORMAT_CUSTOM": {"description": "Can be used as value for the <code>AxisFormat</code> XML/A property \n(see: <code><a href=\"#property_PROP_AXISFORMAT\">PROP_AXISFORMAT</a></code>) \nin invocations of the <code>Execute</code> method \n(see: <code><a href=\"#method_execute\">execute()</a></code>).", "default": "<code>CustomFormat</code>", "static": "", "guessedname": "PROP_AXISFORMAT_CUSTOM", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_DISCOVER_SUCCESS": {"description": "Indicates the <code>discoversuccess</code> event. \nThis constant can be used as en entry in the events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.\nThe <code>discoversuccess</code> event is method-specific and fired only after receiving and processing a normal response \n(that is, a response that does not contain a <code>SoapFault</code>)\nto an incovation of the XML/A <code>Discover</code> method\n(see: <code><a href=\"#method_discover\">discover()</a></code>).\nThis is event is not cancelable.", "default": "<code>discoversuccess</code>", "static": "", "guessedname": "EVENT_DISCOVER_SUCCESS", "guessedtype": "property", "type": "string", "final": ""}, "DISCOVER_DATASOURCES": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DISCOVER_DATASOURCES</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this constant as requestType yourself, consider calling the <code><a href=\"#method_discoverDataSources\">discoverDataSources()</a></code> method. \nThe <code>discoverDataSources()</code> method passes <code>DISCOVER_DATASOURCES</code> automatically as requestType for Discover requests.", "default": "<code>DISCOVER_DATASOURCES</code>", "static": "", "guessedname": "DISCOVER_DATASOURCES", "guessedtype": "property", "type": "string", "final": ""}, "DISCOVER_SCHEMA_ROWSETS": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DISCOVER_SCHEMA_ROWSETS</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the <code><a href=\"#method_discoverSchemaRowsets\">discoverSchemaRowsets()</a></code> method. \nThe <code>discoverProperties()</code> method passes <code>DISCOVER_PROPERTIES</code> automatically as requestType for Discover requests.", "default": "<code>DISCOVER_SCHEMA_ROWSETS</code>", "static": "", "guessedname": "DISCOVER_SCHEMA_ROWSETS", "guessedtype": "property", "type": "string", "final": ""}, "EVENT_SUCCESS": {"description": "Indicates the <code>success</code> event. \nThis constant can be used as en entry in the events array argument for the <code><a href=\"#method_addListener\">addListener()</a></code> method.\nThe <code>success</code> event  is the last event that is fired after receiving and processing a normal response \n(that is, a response that does not contain an XML/A <code>SoapFault</code>),\nafter firing the method-specific success events \n(see <code><a href=\"#property_EVENT_EXECUTE_SUCCESS\">EVENT_EXECUTE_SUCCESS</a></code> \nand <code><a href=\"#property_EVENT_DISCOVER_SUCCESS\">EVENT_DISCOVER_SUCCESS</a></code>). \nThe <code>success</code> event is not method-specific, and fires for <code>Execute</code> as well as <code>Discover</code> responses.\nThis is event is not cancelable.", "default": "<code>success</code>", "static": "", "guessedname": "EVENT_SUCCESS", "guessedtype": "property", "type": "string", "final": ""}, "DBSCHEMA_PROVIDER_TYPES": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DBSCHEMA_PROVIDER_TYPES</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the <code><a href=\"#method_discoverDBProviderTypes\">discoverDBProviderTypes()</a></code> method. \nThe <code>discoverDBProviderTypes()</code> method issues a request to invoke the Discover method using <code>DBSCHEMA_PROVIDER_TYPES</code> as requestType.", "default": "<code>DBSCHEMA_PROVIDER_TYPES</code>", "static": "", "guessedname": "DBSCHEMA_PROVIDER_TYPES", "guessedtype": "property", "type": "string", "final": ""}, "PROP_DataSourceInfo": {"description": "Can be used as key in the <code>properties</code> member of the <code>options</code> object \npassed to the <code><a href=\"#method_request\">request()</a></code> method \nto specify the XML/A <code>DataSourceInfo</code> property.\nThe XML/A <code>DataSourceInfo</code>, together with the XML/A service URL are required to \nconnect to a particular OLAP datasource.\nValid values for the <code>DataSourceInfo</code> as well as the corresponding URL should be obtained\nby querying the <code>DataSourceInfo</code> and <code>URL</code> columns of the <code>DISCOVER_DATASOURCES</code> \nrowset respectively (see <code><a href=\"method_discoverDataSources\">discoverDataSources()</a></code>).", "default": "<code>DataSourceInfo</code>", "static": "", "guessedname": "PROP_DATASOURCEINFO", "guessedtype": "property", "type": "string", "final": ""}, "DISCOVER_PROPERTIES": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DISCOVER_PROPERTIES</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the <code><a href=\"#method_discoverProperties\">discoverProperties()</a></code> method. \nThe <code>discoverProperties()</code> method passes <code>DISCOVER_PROPERTIES</code> automatically as requestType for Discover requests.", "default": "<code>DISCOVER_PROPERTIES</code>", "static": "", "guessedname": "DISCOVER_PROPERTIES", "guessedtype": "property", "type": "string", "final": ""}, "PROP_AXISFORMAT_TUPLE": {"description": "Can be used as value for the <code>AxisFormat</code> XML/A property \n(see: <code><a href=\"#property_PROP_AXISFORMAT\">PROP_AXISFORMAT</a></code>) \nin invocations of the <code>Execute</code> method \n(see: <code><a href=\"#method_execute\">execute()</a></code>).", "default": "<code>TupleFormat</code>", "static": "", "guessedname": "PROP_AXISFORMAT_TUPLE", "guessedtype": "property", "type": "string", "final": ""}, "PROP_FORMAT": {"description": "Can be used as key in the <code>properties</code> member of the <code>options</code> object \npassed to the <code><a href=\"#method_execute\">execute()</a></code> method \nto specify the XML/A <code>Format</code> property.\nThis property controls the structure of the resultset.", "default": "<code>Format</code>", "static": "", "guessedname": "PROP_FORMAT", "guessedtype": "property", "type": "string", "final": ""}, "response": {"default": "<code>null</code>", "type": "Xmla.Rowset|Xmla.Resultset", "description": "This property is set to <code>null</code> right before sending an XML/A request.\nWhen a successfull response is received, it is processed and the response object is assigned to this property.\nThe response object is either a \n<code><a href=\"Rowset.html#class_Rowset\">Rowset</a></code> (after a successful invocation of XML/A <code>Discover</code> method, see: <code><a href=\"method_discover\">discover()</a></code>) or a\n<code><a href=\"Resultset.html#class_Resultset\">Resultset</a></code> (after a successful invocation of the XML/A <code>Execute</code> method, see: <code><a href=\"method_execute\">executte()</a></code>) \ninstance. \nIf you are interested in processing the raw response XML, see \n<code><a href=\"#property_responseXML\">responseXML</a></code> and \n<code><a href=\"#property_responseText\">responseText</a></code>.\nNote that it is not safe to read this property immediately after doing an asynchronous request.\nFor asynchronous requests, you can read this property by the time the <code>XXX_SUCCESS</code> event handlers are notified (until it is set to <code>null</code> again by a subsequent request).", "guessedname": "response", "guessedtype": "property"}, "PROP_Catalog": {"description": "Can be used as key in the <code>properties</code> member of the <code>options</code> object \npassed to the <code><a href=\"#method_request\">execute()</a></code> method \nto specify the XML/A <code>Catalog</code> property.\nThe XML/A <code>Catalog</code> spefifies where to look for cubes that are referenced in th MDX statment.\nValid values for the <code>Catalog</code> should be obtained\nby querying the <code>CATALOG_NAME</code> of the <code>DBSCHEMA_CATALOGS</code> \nrowset (see <code><a href=\"method_discoverCatalogs\">discoverCatalogs()</a></code>).", "default": "<code>DataSourceInfo</code>", "static": "", "guessedname": "PROP_CATALOG", "guessedtype": "property", "type": "string", "final": ""}, "DBSCHEMA_TABLES_INFO": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the <code>DBSCHEMA_TABLES_INFO</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverDBTablesInfo\">discoverDBTablesInfo()</a></code> method. \nThe <code>discoverDBTablesInfo()</code> method issues a request to invoke the Discover method using <code>DBSCHEMA_TABLES_INFO</code> as requestType.", "default": "<code>DBSCHEMA_TABLES_INFO</code>", "static": "", "guessedname": "DBSCHEMA_TABLES_INFO", "guessedtype": "property", "type": "string", "final": ""}, "MDSCHEMA_CUBES": {"description": "Can be used as value for the <code>requestType</code> option in the options object passed to the to \n<code><a href=\"#method_request\">request()</a></code> method to invoke the XML/A Discover method on the server to return the \n<code>MDSCHEMA_CUBES</code> schema rowset.\nThe <code>requestType</code> option applies only to Discover requests.\nInstead of passing this <code>requestType</code> yourself, consider calling the \n<code><a href=\"#method_discoverMDCubes\">discoverMDCubes()</a></code> method. \nThe <code>discoverMDCubes()</code> method issues a request to invoke the Discover method using\n<code>MDSCHEMA_CUBES</code> as requestType.", "default": "<code>MDSCHEMA_CUBES</code>", "static": "", "guessedname": "MDSCHEMA_CUBES", "guessedtype": "property", "type": "string", "final": ""}}, "description": "<p>\nThe Xmla class provides a javascript API to communicate XML for Analysis (XML/A) over HTTP.\nXML/A is an industry standard protocol that allows webclients to work with OLAP servers.\nTo fully understand the scope and purpose of this utility, it is highly recommended\nto read <a href=\"http://xmla.org/xmla1.1.doc\">the XML/A specification</a> \n(MS Word format. For other formats, \nsee: <a href=\"http://code.google.com/p/xmla4js/source/browse/#svn/trunk/doc/xmla1.1 specification\">http://code.google.com/p/xmla4js/source/browse/#svn/trunk/doc/xmla1.1 specification</a>). \n</p>"}, "Xmla.Exception": {"name": "Xmla.Exception", "constructors": [{"description": "<p>\nThis class is used to indicate an runtime errors occurring in any of the methods of the xmla4js classes.\n</p>\n<p>\nYou do not need to instantiate objects of this class yourself. \nRather, instances of this class are created and thrown at runtime whenever an error occurs.\nThe purpose is to provide a clean and clear way for applications that use xmla4js to recognize and handle Xmla4js specific runtime errors.\n</p>\n<p>\nTo handle Xmla4js errors, you can use a <code>try...catch</code> block like this:\n</p>\n<pre>\n&nbsp;try {\n&nbsp;    ...general xmla4js work...\n&nbsp;} catch (exception) {\n&nbsp;    if (exception instanceof Xmla.Exception) {\n&nbsp;        ...use exception.code, exception.message and exception.data to handle the exception.\n&nbsp;    } else {\n&nbsp;        ...handle other errors...\n&nbsp;    }\n&nbsp;}\n</pre>"}], "namespace": "", "module": "xmla", "guessedname": "Exception", "file": "Xmla.js", "guessedtype": "function", "shortname": "Xmla.Exception", "properties": {"data": {"default": "{null}", "type": "{string}", "description": "Additional data captured when the exception was instantiated.\nThe type of information stored here is dependent upon the nature of the error.", "guessedname": "data", "guessedtype": "property"}, "code": {"default": "{null}", "type": "{int}", "description": "A code that can be used to identify this particular kind of exception.", "guessedname": "code", "guessedtype": "property"}, "UNKNOWN_EVENT_CDE": {"description": "Exception code indicating that the event name was unrecognized.", "default": "<code>-6</code>", "static": "", "guessedname": "UNKNOWN_EVENT_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "source": {"default": "{null}", "type": "{string}", "description": "A name that indicates in what component (on the client or server side) this error or warning occurred.", "guessedname": "source", "guessedtype": "property"}, "TYPE_WARNING": {"description": "Can appear as value for the <code><a href=\"#property_type\">type</a></code> property of instances of the <code><a href=\"#class_Xmla.Exception\">Xmla.Exception</a></code> class, \nand indicates that this <code>Xmla.Exception</code> signals a warning.", "default": "<code>warning</code>", "static": "", "guessedname": "TYPE_WARNING", "guessedtype": "property", "type": "string", "final": ""}, "NO_EVENTS_SPECIFIED_CDE": {"description": "Exception code indicating a <code>events</code> were expected but ommitted.", "default": "<code>-4</code>", "static": "", "guessedname": "NO_EVENTS_SPECIFIED_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "helpfile": {"default": "{null}", "type": "{string}", "description": "A path or url that points to a document that contains more information about this error.", "guessedname": "helpfile", "guessedtype": "property"}, "MISSING_STATEMENT_CDE": {"description": "Exception code indicating a <code>statement</code> option was expected but ommitted.", "default": "<code>-2</code>", "static": "", "guessedname": "MISSING_STATEMENT_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "MISSING_URL_CDE": {"description": "Exception code indicating a <code>url</code> option was expected but ommitted.", "default": "<code>-3</code>", "static": "", "guessedname": "MISSING_URL_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "INVALID_FIELD_CDE": {"description": "Exception code indicating the field name is not valid.", "default": "<code>-9</code>", "static": "", "guessedname": "INVALID_FIELD_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "TYPE_ERROR": {"description": "Can appear as value for the <code><a href=\"#property_type\">type</a></code> property of instances of the <code><a href=\"#class_Xmla.Exception\">Xmla.Exception</a></code> class, \nand indicates that this <code>Xmla.Exception</code> signals an error.", "default": "<code>error</code>", "static": "", "guessedname": "TYPE_ERROR", "guessedtype": "property", "type": "string", "final": ""}, "MISSING_REQUEST_TYPE_CDE": {"description": "Exception code indicating a <code>requestType</code> option was expected but ommitted.", "default": "<code>-1</code>", "static": "", "guessedname": "MISSING_REQUEST_TYPE_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "INVALID_EVENT_HANDLER_CDE": {"description": "Exception code indicating that no proper handler was passed for the events.", "default": "<code>-7</code>", "static": "", "guessedname": "INVALID_EVENT_HANDLER_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "WRONG_EVENTS_FORMAT_CDE": {"description": "Exception code indicating a <code>events</code> were specifeid in the wrong format.", "default": "<code>-5</code>", "static": "", "guessedname": "WRONG_EVENTS_FORMAT_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "ERROR_PARSING_RESPONSE_CDE": {"description": "Exception code indicating that the rrepsonse could not be parsed", "default": "<code>-8</code>", "static": "", "guessedname": "ERROR_PARSING_RESPONSE_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "HTTP_ERROR": {"description": "Exception code indicating a general XMLHttpRequest error.", "default": "<code>-10</code>", "static": "", "guessedname": "HTTP_ERROR_CDE", "guessedtype": "property", "type": "{int}", "final": ""}, "message": {"default": "{null}", "type": "{string}", "description": "A human readable message that describes the nature of the error or warning.", "guessedname": "message", "guessedtype": "property"}, "type": {"default": "{null}", "type": "{string}", "description": "This propery indicates what kind of exception occurred. It can have one of the following values: <dl>\n<dt><code><a href=\"property_TYPE_WARNING\">TYPE_WARNING</a></code></dt><dd>Indicates a warning</dd>\n<dt><code><a href=\"property_TYPE_ERROR\">TYPE_ERROR</a></code></dt><dd>Indicates an error</dd>\n</dl>", "guessedname": "type", "guessedtype": "property"}}, "description": "<p>\nThis class is used to indicate an runtime errors occurring in any of the methods of the xmla4js classes.\n</p>\n<p>\nYou do not need to instantiate objects of this class yourself. \nRather, instances of this class are created and thrown at runtime whenever an error occurs.\nThe purpose is to provide a clean and clear way for applications that use xmla4js to recognize and handle Xmla4js specific runtime errors.\n</p>\n<p>\nTo handle Xmla4js errors, you can use a <code>try...catch</code> block like this:\n</p>\n<pre>\n&nbsp;try {\n&nbsp;    ...general xmla4js work...\n&nbsp;} catch (exception) {\n&nbsp;    if (exception instanceof Xmla.Exception) {\n&nbsp;        ...use exception.code, exception.message and exception.data to handle the exception.\n&nbsp;    } else {\n&nbsp;        ...handle other errors...\n&nbsp;    }\n&nbsp;}\n</pre>"}}, "version": "r12", "modules": {"xmla": {"description": "Xmla implements a XML for Analysis (XML/A) client in javascript.\nUsing this utility you can communicate with XML/A enabled OLAP servers \nto obtain metadata and to issue MDX queries.", "submodules": [], "classlist": ["Xmla", "Xmla.Rowset", "Xmla.Exception"], "title": "Xmla utility", "filelist": ["Xmla.js"], "subdata": {}, "name": "xmla"}}, "filemap": {"Xmla.js": {"classlist": ["Xmla", "Xmla.Rowset", "Xmla.Exception"], "name": "Xmla.js", "module": "xmla"}}}